<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmartLibrary.FileServer.Application</name>
    </assembly>
    <members>
        <member name="T:SmartLibrary.FileServer.Application.AppServices.CapDocumentAppService">
            <summary>
            Cap文档描述
            </summary>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.AppServices.CapDocumentAppService.GetCapPublishEventDoc">
            <summary>
            获取当前服务发布事件描述文档数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.AppServices.FileAppService.FileDownload(System.String)">
            <summary>
            文件下载
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.AppServices.FileAppService.UploadFileAsync(System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            文件上传
            </summary>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="T:SmartLibrary.FileServer.Application.AppServices.SysMenuAppService">
            <summary>
            权限管理接口
            </summary>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.AppServices.SysMenuAppService.GetAllPermissionTree">
            <summary>
            获取完整的权限-树型
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.AppServices.SysMenuAppService.GetSysRoleInfo(System.Guid)">
            <summary>
            获取角色信息  基础信息+权限列表
            </summary>
            <param name="roleId">角色id</param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.AppServices.SysMenuAppService.SaveSysRoleInfo(SmartLibrary.FileServer.EntityFramework.Core.Dtos.SysRoleInfoDto)">
            <summary>
            保存角色信息
            </summary>
            <param name="sysRoleInfoDto"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.AppServices.SysMenuAppService.GetUserPermissionList(System.Guid)">
            <summary>
            获取登陆用户所有的权限菜单-列表
            </summary>
            <param name="userKey">用户唯一标识</param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.AppServices.SysMenuAppService.GetUserPermissionTree(System.Guid)">
            <summary>
            获取登陆用户所有的权限菜单-树型
            </summary>
            <param name="userKey">用户唯一标识</param>
            <returns></returns>
        </member>
        <member name="T:SmartLibrary.FileServer.Application.HealthAppService">
            <summary>
            WebApi心跳检查
            </summary>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.HealthAppService.Index">
            <summary>
            WebApi心跳检查
            </summary>
            <returns></returns>
        </member>
        <member name="T:SmartLibrary.FileServer.Application.MigrationController">
            <summary>
            数据库迁移的专用接口示例
            </summary>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.MigrationController.InitializeBasicData(System.String)">
            <summary>
            初始话数据，本接口示范  向基础表插入基础数据
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:SmartLibrary.FileServer.Application.UserAppService">
            <summary>
            应用服务接口
            </summary>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.UserAppService.GetUserName(SmartLibraryUser.UserRequest)">
            <summary>
            缓存测试 获取用户名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.UserAppService.InsertAsset(System.String)">
            <summary>
            多租户测试 插入一条Asset数据，并立即返回其信息
            </summary>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.UserAppService.GetAllAsset">
            <summary>
            多租户测试 获取所有Asset
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.UserAppService.SetCach(System.String)">
            <summary>
            设置redis缓存值
            </summary>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.UserAppService.GetCach(System.String)">
            <summary>
            设置redis缓存值
            </summary>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="F:SmartLibrary.FileServer.Application.Dtos.Cap.UserServicePublishEvent.NewPerson">
            <summary>
            事件名称
            </summary>
        </member>
        <member name="T:SmartLibrary.FileServer.Application.Dtos.Cap.UserServicePublishEvent.NewPersonMsg">
            <summary>
            事件对应消息
            </summary>
        </member>
        <member name="P:SmartLibrary.FileServer.Application.Dtos.Cap.UserServicePublishEvent.NewPersonMsg.PersonId">
            <summary>
            员工Id
            </summary>
        </member>
        <member name="F:SmartLibrary.FileServer.Application.Dtos.Cap.UserServiceSubscribeEvent.NewPerson">
            <summary>
            事件名称
            </summary>
        </member>
        <member name="T:SmartLibrary.FileServer.Application.Dtos.Cap.UserServiceSubscribeEvent.NewPersonMsg">
            <summary>
            消息接收类型
            </summary>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.ISysMenuService.GetAllPermissionTree">
            <summary>
            获取本应用中所有的权限列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.ISysMenuService.GetUserPermissionList(System.Guid)">
            <summary>
            获取当前登陆用户的所有权限列表
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.ISysMenuService.SaveRoleMenuList(System.Collections.Generic.List{SmartLibrary.FileServer.EntityFramework.Core.Dtos.SysRoleMenuDto})">
            <summary>
            保存用户的权限列表
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.ISysMenuService.InsertSysRoleInfo(SmartLibrary.FileServer.EntityFramework.Core.Dtos.SysRoleInfoDto)">
            <summary>
            新增角色信息
            </summary>
            <param name="sysRoleInfoDto"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.ISysMenuService.UpdateSysRoleInfo(SmartLibrary.FileServer.EntityFramework.Core.Dtos.SysRoleInfoDto)">
            <summary>
            更新角色信息
            </summary>
            <param name="sysRoleInfoDto"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.ISysMenuService.GetSysRoleBaseInfo(System.Guid)">
            <summary>
            获取角色
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.ISysMenuService.GetRoleMenu(System.Guid)">
            <summary>
            查角色-权限关联
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.ISysMenuService.GetSysRoleInfo(System.Guid)">
            <summary>
            查角色信息
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetAllPermissionTree">
            <summary>
            获取权限树
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetUserPermissionList(System.Guid)">
            <summary>
            获取登陆用户的所有可用API权限
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.SaveRoleMenuList(System.Collections.Generic.List{SmartLibrary.FileServer.EntityFramework.Core.Dtos.SysRoleMenuDto})">
            <summary>
            保存角色-菜单权限关系
            </summary>
            <param name="sysRoleMenuDtos"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.InsertSysRoleInfo(SmartLibrary.FileServer.EntityFramework.Core.Dtos.SysRoleInfoDto)">
            <summary>
            新增角色基础信息
            </summary>
            <param name="sysRoleInfoDto"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.UpdateSysRoleInfo(SmartLibrary.FileServer.EntityFramework.Core.Dtos.SysRoleInfoDto)">
            <summary>
            修改角色基础信息
            </summary>
            <param name="sysRoleInfoDto"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetSysRoleBaseInfo(System.Guid)">
            <summary>
            修改角色基础信息
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetRoleMenu(System.Guid)">
            <summary>
            查角色-权限绑定关系
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetSysRoleInfo(System.Guid)">
            <summary>
            查角色的信息
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetUserPermissionTree(System.Guid)">
            <summary>
            查角色的信息
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetMGRPermissionTree(System.Guid)">
            <summary>
            取管理员（默认角色）的权限树
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetOperatorPermissionTree(System.Guid)">
            <summary>
            取操作员（默认角色）的权限树
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetVisitorsPermissionTree(System.Guid)">
            <summary>
            取浏览者（默认角色）的权限树
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetMGRPermissionList">
            <summary>
            取管理员（默认角色）的权限树
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetOperatorPermissionList">
            <summary>
            取操作员（默认角色）的权限树
            </summary>
            <param name="userId"></param>  GetOperatorPermissionList
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.SysMenuService.GetVisitorsPermissionList">
            <summary>
            取浏览者（默认角色）的权限树
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:SmartLibrary.FileServer.Application.Services.RemoteProxy.EsHttp">
            <summary>
            请求代理，具体使用方式参考furion框架
            </summary>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.Services.RemoteProxy.EsHttp.PostVipSearchByObjectV2Async(System.Object)">
            <summary>
            转发到Es查询服务，方法vipSearchByObjectV2
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:SmartLibrary.FileServer.Application.UserService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.UserService.GetUserName(SmartLibraryUser.UserRequest,Grpc.Core.ServerCallContext)">
            <summary>
            获取用户姓名
            </summary>
            <param name="request"></param>
            <param name="callContext"></param>
            <returns></returns>
        </member>
        <member name="M:SmartLibrary.FileServer.Application.UserService.AddOnePerson">
            <summary>
            模拟添加员工同时，发布投递添加员工消息
            </summary>
            <returns></returns>
        </member>
        <member name="T:SmartLibraryUser.UserRoleGrpcServiceReflection">
            <summary>Holder for reflection information generated from Protos/Client/UserRoleGrpcService.proto</summary>
        </member>
        <member name="P:SmartLibraryUser.UserRoleGrpcServiceReflection.Descriptor">
            <summary>File descriptor for Protos/Client/UserRoleGrpcService.proto</summary>
        </member>
        <member name="T:SmartLibraryUser.UserRoleRequest">
            <summary>
            定义请求的对象名
            </summary>
        </member>
        <member name="F:SmartLibraryUser.UserRoleRequest.UserKeyFieldNumber">
            <summary>Field number for the "UserKey" field.</summary>
        </member>
        <member name="P:SmartLibraryUser.UserRoleRequest.UserKey">
            <summary>
            有一个属性字段是name
            </summary>
        </member>
        <member name="T:SmartLibraryUser.UserRoleReply">
            <summary>
            定义返回的对象名
            </summary>
        </member>
        <member name="F:SmartLibraryUser.UserRoleReply.UserRoleFieldNumber">
            <summary>Field number for the "UserRole" field.</summary>
        </member>
        <member name="P:SmartLibraryUser.UserRoleReply.UserRole">
            <summary>
            有一个返回的字段是message
            </summary>
        </member>
        <member name="T:SmartLibraryUser.UserRoleGrpcService">
            <summary>
            定义具体的服务
            </summary>
        </member>
        <member name="P:SmartLibraryUser.UserRoleGrpcService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:SmartLibraryUser.UserRoleGrpcService.UserRoleGrpcServiceClient">
            <summary>Client for UserRoleGrpcService</summary>
        </member>
        <member name="M:SmartLibraryUser.UserRoleGrpcService.UserRoleGrpcServiceClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for UserRoleGrpcService</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:SmartLibraryUser.UserRoleGrpcService.UserRoleGrpcServiceClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for UserRoleGrpcService that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:SmartLibraryUser.UserRoleGrpcService.UserRoleGrpcServiceClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:SmartLibraryUser.UserRoleGrpcService.UserRoleGrpcServiceClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:SmartLibraryUser.UserRoleGrpcService.UserRoleGrpcServiceClient.GetUserRole(SmartLibraryUser.UserRoleRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            定义某一个方法API，格式是：rpc 方法名(请求参数对象名) returns(返回参数对象名)
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:SmartLibraryUser.UserRoleGrpcService.UserRoleGrpcServiceClient.GetUserRole(SmartLibraryUser.UserRoleRequest,Grpc.Core.CallOptions)">
            <summary>
            定义某一个方法API，格式是：rpc 方法名(请求参数对象名) returns(返回参数对象名)
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:SmartLibraryUser.UserRoleGrpcService.UserRoleGrpcServiceClient.GetUserRoleAsync(SmartLibraryUser.UserRoleRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            定义某一个方法API，格式是：rpc 方法名(请求参数对象名) returns(返回参数对象名)
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:SmartLibraryUser.UserRoleGrpcService.UserRoleGrpcServiceClient.GetUserRoleAsync(SmartLibraryUser.UserRoleRequest,Grpc.Core.CallOptions)">
            <summary>
            定义某一个方法API，格式是：rpc 方法名(请求参数对象名) returns(返回参数对象名)
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:SmartLibraryUser.UserRoleGrpcService.UserRoleGrpcServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="T:SmartLibraryUser.UserServiceReflection">
            <summary>Holder for reflection information generated from Protos/Server/UserService.proto</summary>
        </member>
        <member name="P:SmartLibraryUser.UserServiceReflection.Descriptor">
            <summary>File descriptor for Protos/Server/UserService.proto</summary>
        </member>
        <member name="T:SmartLibraryUser.UserRequest">
            <summary>
            定义请求的对象名
            </summary>
        </member>
        <member name="F:SmartLibraryUser.UserRequest.IdFieldNumber">
            <summary>Field number for the "Id" field.</summary>
        </member>
        <member name="P:SmartLibraryUser.UserRequest.Id">
            <summary>
            有一个属性字段是name
            </summary>
        </member>
        <member name="T:SmartLibraryUser.UserReply">
            <summary>
            定义返回的对象名
            </summary>
        </member>
        <member name="F:SmartLibraryUser.UserReply.IdFieldNumber">
            <summary>Field number for the "Id" field.</summary>
        </member>
        <member name="P:SmartLibraryUser.UserReply.Id">
            <summary>
            有一个返回的字段是message
            </summary>
        </member>
        <member name="F:SmartLibraryUser.UserReply.UserNameFieldNumber">
            <summary>Field number for the "UserName" field.</summary>
        </member>
        <member name="T:SmartLibraryUser.UserGrpcService">
            <summary>
            定义具体的服务
            </summary>
        </member>
        <member name="P:SmartLibraryUser.UserGrpcService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:SmartLibraryUser.UserGrpcService.UserGrpcServiceBase">
            <summary>Base class for server-side implementations of UserGrpcService</summary>
        </member>
        <member name="M:SmartLibraryUser.UserGrpcService.UserGrpcServiceBase.GetUserName(SmartLibraryUser.UserRequest,Grpc.Core.ServerCallContext)">
            <summary>
            定义某一个方法API，格式是：rpc 方法名(请求参数对象名) returns(返回参数对象名)
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:SmartLibraryUser.UserGrpcService.BindService(SmartLibraryUser.UserGrpcService.UserGrpcServiceBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:SmartLibraryUser.UserGrpcService.BindService(Grpc.Core.ServiceBinderBase,SmartLibraryUser.UserGrpcService.UserGrpcServiceBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Grpc.Health.V1.HealthCheckReflection">
            <summary>Holder for reflection information generated from Protos/Server/HealthCheck.proto</summary>
        </member>
        <member name="P:Grpc.Health.V1.HealthCheckReflection.Descriptor">
            <summary>File descriptor for Protos/Server/HealthCheck.proto</summary>
        </member>
        <member name="F:Grpc.Health.V1.HealthCheckRequest.ServiceFieldNumber">
            <summary>Field number for the "service" field.</summary>
        </member>
        <member name="F:Grpc.Health.V1.HealthCheckResponse.StatusFieldNumber">
            <summary>Field number for the "status" field.</summary>
        </member>
        <member name="T:Grpc.Health.V1.HealthCheckResponse.Types">
            <summary>Container for nested types declared in the HealthCheckResponse message type.</summary>
        </member>
        <member name="P:Grpc.Health.V1.Health.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Grpc.Health.V1.Health.HealthBase">
            <summary>Base class for server-side implementations of Health</summary>
        </member>
        <member name="M:Grpc.Health.V1.Health.BindService(Grpc.Health.V1.Health.HealthBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Grpc.Health.V1.Health.BindService(Grpc.Core.ServiceBinderBase,Grpc.Health.V1.Health.HealthBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
    </members>
</doc>
